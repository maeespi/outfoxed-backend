openapi: 3.1.0
info:
  title: OutFoxed API
  version: 1.0.0
servers:
  - url: https://outfoxed-backend.onrender.com
paths:
  /start-timer:
    post:
      operationId: startPomodoroTimer
      summary: Start a Pomodoro timer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                duration:
                  type: integer
                  description: Duration of the timer in minutes
                  default: 25
      responses:
        "200":
          description: Timer started message
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  note:
                    type: string
                  suggestion:
                    type: string
                  tip:
                    type: string
                  duration:
                    type: integer

  /log-session:
    post:
      operationId: logSession
      summary: Log the result of a completed focus session
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                summary:
                  type: string
                  description: What the user accomplished during the session
                mood:
                  type: string
                  description: Optional mood descriptor (e.g., focused, stressed, proud)
                category:
                  type: string
                  description: Optional tag for grouping logs (e.g., work, school, self-care)

      responses:
        "200":
          description: Session logged confirmation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  summary:
                    type: string
                  mood:
                    type: string
                  category:
                    type: string

  /add-task:
    post:
      operationId: addTask
      summary: Add a new task to the system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: Title or description of the task
                category:
                  type: string
                  description: Task category (e.g., school, work, self-care)
                dueDate:
                  type: string
                  format: date
                  description: Optional due date (YYYY-MM-DD)
      responses:
        "200":
          description: Task added confirmation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  task:
                    type: object
                    properties:
                      title:
                        type: string
                      category:
                        type: string
                      dueDate:
                        type: string
                        format: date
  /get-tasks:
    get:
      operationId: getTasks
      summary: Retrieve all tasks or filter by category
      parameters:
        - in: query
          name: category
          schema:
            type: string
          required: false
          description: Filter tasks by category (e.g., school, work)
      responses:
        "200":
          description: A list of tasks
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  tasks:
                    type: array
                    items:
                      type: object
                      properties:
                        title:
                          type: string
                        category:
                          type: string
                        dueDate:
                          type: string
                          format: date
  /complete-task:
    post:
      operationId: completeTask
      summary: Mark a task as complete and remove it from the list
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: The title of the task to mark as complete
      responses:
        "200":
          description: Confirmation message
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "404":
          description: Task not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string